<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RAEREAREQBERAEREAREQBERAP//Z
</value>
  </data>
</root>